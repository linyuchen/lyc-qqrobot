# coding=utf8
# 从1901年到2050年的农历与阳历对照表
# 例如：
# [ 11 , 11 , '0101001010111010' , 0 ] ,   # 1901
# 11,11 的意思是:
#      阳历 1901 年1月1日 对应 农历 1900年11月11日
# '0101001010111010',0的意思是:
#   (1) ,0 = 农历1901年无闰月
# （2） 从左到右分别代表该年农历的月份大小
#    0=29天   农历1900年11月小
#    1=30天   农历1900年12月大
#    0=29天   农历1901年1月小
# -------------------------------------------
# [ 12 , 3 , '1010100100110111' , 5 ] ,   # 1903
# 12,3 的意思是:
#      阳历 1903 年1月1日 对应 农历 1902年12月3日
# '1010100100110111',5 的意思
#   (1) ,5=该年即1903年农历闰5月
#   (2) 从左到右分别代表该年农历的月份大小
#   1      0     1    0    1     0      0     1   00110111
#   12月   正月 二月 三月   四月 五月   闰5月 六月 ......
#   大     小    大    小   大    小      小    大   ......
DA_table = [
    [11, 11, '0101001010111010', 0],  # 1901
    [11, 22, '1010100101011101', 0],  # 1902
    [12, 3, '1010100100110111', 5],  # 1903
    [11, 14, '0111010010011011', 0],  # 1904
    [11, 26, '1011011001010101', 0],  # 1905
    [12, 7, '1011010101010101', 4],  # 1906
    [11, 17, '0101010110101010', 0],  # 1907
    [11, 28, '1010011010110101', 0],  # 1908
    [12, 10, '1010010101110101', 2],  # 1909
    [11, 20, '0101001010111010', 0],  # 1910
    [12, 1, '0101001001101110', 6],  # 1911
    [11, 13, '1110100100110111', 0],  # 1912
    [11, 24, '0111010010010111', 0],  # 1913
    [12, 6, '1110101010010110', 5],  # 1914
    [11, 16, '0110110101010101', 0],  # 1915
    [11, 26, '0011010110101010', 0],  # 1916
    [12, 8, '0100101101101010', 2],  # 1917
    [11, 19, '1010010101101101', 0],  # 1918
    [11, 30, '1101001001101110', 7],  # 1919
    [11, 11, '1101001001011110', 0],  # 1920
    [11, 23, '1110100100101110', 0],  # 1921
    [12, 4, '1101100100101101', 5],  # 1922
    [11, 15, '1101101010010101', 0],  # 1923
    [11, 25, '0101101101010010', 0],  # 1924
    [12, 7, '0101011011010100', 4],  # 1925
    [11, 17, '0100101011011010', 0],  # 1926
    [11, 28, '1010010101011101', 0],  # 1927
    [12, 9, '1010010010111101', 2],  # 1928
    [11, 21, '1101001001011101', 0],  # 1929
    [12, 2, '1011001001011011', 6],  # 1930
    [11, 13, '1011010100101011', 0],  # 1931
    [11, 24, '1011101010010101', 0],  # 1932
    [12, 6, '1011011010100101', 5],  # 1933
    [11, 16, '0101011010110100', 0],  # 1934
    [11, 26, '0100101011011010', 0],  # 1935
    [12, 7, '0100100110111010', 3],  # 1936
    [11, 19, '1010010010111011', 0],  # 1937
    [11, 30, '1011001001011011', 7],  # 1938
    [11, 11, '0111001001010111', 0],  # 1939
    [11, 22, '0111010100101011', 0],  # 1940
    [12, 4, '0110110100101010', 6],  # 1941
    [11, 15, '1010110101010101', 0],  # 1942
    [11, 25, '0101010110101010', 0],  # 1943
    [12, 6, '0101010101101100', 4],  # 1944
    [11, 18, '1100100101110110', 0],  # 1945
    [11, 28, '0110010010110111', 0],  # 1946
    [12, 10, '1110010010101110', 2],  # 1947
    [11, 21, '1110101001010110', 0],  # 1948
    [12, 3, '1101101001010101', 7],  # 1949
    [11, 13, '0101101100101010', 0],  # 1950
    [11, 24, '1010110101010101', 0],  # 1951
    [12, 5, '1010101011010101', 5],  # 1952
    [11, 16, '0101001101101010', 0],  # 1953
    [11, 27, '1010100101101101', 0],  # 1954
    [12, 8, '1010100101011101', 3],  # 1955
    [11, 19, '1101010010101110', 0],  # 1956
    [12, 1, '1101010010101011', 8],  # 1957
    [11, 12, '1011101001010101', 0],  # 1958
    [11, 22, '0101101010101010', 0],  # 1959
    [12, 3, '0101011010101010', 6],  # 1960
    [11, 15, '1010101011010101', 0],  # 1961
    [11, 25, '0101001011011010', 0],  # 1962
    [12, 6, '0101001010111010', 4],  # 1963
    [11, 17, '1010100101011101', 0],  # 1964
    [11, 29, '1101010010011011', 0],  # 1965
    [12, 10, '0111010010011011', 3],  # 1966
    [11, 21, '1011011001010101', 0],  # 1967
    [12, 2, '1010110101010101', 7],  # 1968
    [11, 13, '0101010110101010', 0],  # 1969
    [11, 24, '1010010110110101', 0],  # 1970
    [12, 5, '1010010101110101', 5],  # 1971
    [11, 15, '0101001010110110', 0],  # 1972
    [11, 27, '0110100100110111', 0],  # 1973
    [12, 9, '1110100100110111', 4],  # 1974
    [11, 19, '0111010010010111', 0],  # 1975
    [12, 1, '1110101010010110', 8],  # 1976
    [11, 12, '0110110101010010', 0],  # 1977
    [11, 22, '0010110110101010', 0],  # 1978
    [12, 3, '0100101101101010', 6],  # 1979
    [11, 14, '1010010101101101', 0],  # 1980
    [11, 26, '1101001001101110', 0],  # 1981
    [12, 7, '1101001001011110', 4],  # 1982
    [11, 18, '1110100100101110', 0],  # 1983
    [11, 29, '1110110010010110', 10],  # 1984
    [11, 11, '1101101010010101', 0],  # 1985
    [11, 21, '0101101101010010', 0],  # 1986
    [12, 2, '0101011011010010', 6],  # 1987
    [11, 12, '0010101011011010', 0],  # 1988
    [11, 24, '1010010011011101', 0],  # 1989
    [12, 5, '1010010010111101', 5],  # 1990
    [11, 16, '1101001001011101', 0],  # 1991
    [11, 27, '1101100100101101', 0],  # 1992
    [12, 9, '1011010100101011', 3],  # 1993
    [11, 20, '1011101010010101', 0],  # 1994
    [12, 1, '1011010110010101', 8],  # 1995
    [11, 11, '0101011010110010', 0],  # 1996
    [11, 22, '0010101011011010', 0],  # 1997
    [12, 3, '0100100110110110', 5],  # 1998
    [11, 14, '0110010010111011', 0],  # 1999
    [11, 25, '1011001001011011', 0],  # 2000
    [12, 7, '0110101001010111', 4],  # 2001
    [11, 18, '0111010100101011', 0],  # 2002
    [11, 29, '1011011010010101', 0],  # 2003
    [12, 10, '1010110101010101', 2],  # 2004
    [11, 21, '0101010110101010', 0],  # 2005
    [12, 2, '0101010101101100', 7],  # 2006
    [11, 13, '1100100101110110', 0],  # 2007
    [11, 23, '0110010010110111', 0],  # 2008
    [12, 6, '1110010010101110', 5],  # 2009
    [11, 17, '1110101001010110', 0],  # 2010
    [11, 27, '0110110100101010', 0],  # 2011
    [12, 8, '0101101010101010', 4],  # 2012
    [11, 20, '1010110101010101', 0],  # 2013
    [12, 1, '1010101011010101', 9],  # 2014
    [11, 11, '0101001011101010', 0],  # 2015
    [11, 22, '1010100101101101', 0],  # 2016
    [12, 4, '1010100101011101', 6],  # 2017
    [11, 15, '1101010010101110', 0],  # 2018
    [11, 26, '1110101001001101', 0],  # 2019
    [12, 7, '1011101001010101', 4],  # 2020
    [11, 18, '0101101010101010', 0],  # 2021
    [11, 29, '1010101101010101', 0],  # 2022
    [12, 10, '1010011011010101', 2],  # 2023
    [11, 20, '0101001011011010', 0],  # 2024
    [12, 2, '0101001010111010', 6],  # 2025
    [11, 13, '1010100100111011', 0],  # 2026
    [11, 24, '1011010010011011', 0],  # 2027
    [12, 5, '0111010010011011', 5],  # 2028
    [11, 17, '1011010101001101', 0],  # 2029
    [11, 28, '1101011010101001', 0],  # 2030
    [12, 8, '0011010110101010', 3],  # 2031
    [11, 19, '1010010110110101', 0],  # 2032
    [12, 1, '1010010101110101', 11],  # 2033
    [11, 11, '0101001010110110', 0],  # 2034
    [11, 22, '0110100100110111', 0],  # 2035
    [12, 4, '1110100100101111', 6],  # 2036
    [11, 16, '1111010010010111', 0],  # 2037
    [11, 26, '0111010101001011', 0],  # 2038
    [12, 7, '0110110101010010', 5],  # 2039
    [11, 17, '0010110101101001', 0],  # 2040
    [11, 29, '1001010110110101', 0],  # 2041
    [12, 10, '1010010101101101', 2],  # 2042
    [11, 21, '1101001001101110', 0],  # 2043
    [12, 2, '1101001001011110', 7],  # 2044
    [11, 14, '1110100100101110', 0],  # 2045
    [11, 25, '1110101010010110', 0],  # 2046
    [12, 6, '1101101010010101', 5],  # 2047
    [11, 16, '0101101101001010', 0],  # 2048
    [11, 28, '1010101101101001', 0],  # 2049
    [12, 8, '0010101011011000', 3]  # 2050
];
solar_mm = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];


def myint(y):
    try:
        y = int(y)
    except:
        y = 1
    if y < 0:
        y = -y
    if y < 1:
        y = 1
    return y


# 判断阳历是否闰年
def isLeapYear(y):
    y = myint(y)
    if (y % 400) == 0:
        return 1
    if ((y % 100) != 0) and ((y % 4) == 0):
        return 1
    return 0


# 计算某年某月的天数
def getLastDay(y, m):
    y = myint(y)
    m = myint(m)
    if m > 12:
        m = 12
    r = solar_mm[m - 1]
    if m == 2:
        r = r + isLeapYear(y)
    return r


# 计算从 y年1月1日到 y年m月 d日的天数（含两端)
# 如 __calcDays(1901,1,2) ==> 2
def __calcDays(y, m, d):
    s = d
    for i in range(1, m):
        s = s + getLastDay(y, i)
    return s


# 阳历转阴历
# 入口： y,m,d 阳历日期
# 返回: 阴历的 i_y,i_m,I_d
#      i_m<0 表示闰月
def getLunaDay(y, m, d):
    y = myint(y)
    m = myint(m)
    d = myint(d)
    if y < 1901:
        y = 1901
    elif y > 2049:
        y = 2049
    if m > 12:
        m = 12
    if d > getLastDay(y, m):
        d = getLastDay(y, m)
    tmDA = DA_table[y - 1901]
    ln_month = [29 + int(x) for x in tmDA[2]]
    ln_m = ln_month[:]
    ln_d = ln_month[:]
    ln_m[0] = tmDA[0]
    start = 1

    if ln_m[0] == 11:
        start = 2
        ln_m[1] = 12
    for i in range(start, len(ln_m)):
        j = i - start + 1

        ln_m[i] = j
        # 处理闰月
        if tmDA[3] > 0:
            if tmDA[3] == j - 1:
                ln_m[i] = -(j - 1)  # 负表示闰月
            if tmDA[3] < j - 1:
                ln_m[i] = j - 1

    days = __calcDays(y, m, d) + tmDA[1] - 1
    im = 0
    while days > 0:
        if days <= ln_d[im]:
            ln_d[im] = days
            break
        days = days - ln_d[im]
        im = im + 1
    if im >= start:
        i_y = y
    else:
        i_y = y - 1
    i_d = ln_d[im]
    i_m = ln_m[im]
    return i_y, i_m, i_d


if "__main__" == __name__:
    import time

    print(getLunaDay("2013", 8, 26))
